name: Build kernel

env:
  CCACHE_DIR: /home/ubuntu/ccache

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/using-jobs/running-jobs-in-a-container
    container:
      image: initdc/ruby:22.04-3.0
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrun
    defaults:
      run:
        shell: bash
        working-directory: /home/ubuntu
    steps:
      - name: Prepare package
        run: sudo apt update && sudo apt install --no-install-recommends -y ccache gcc
      - name: Checkout
        run: |
          git clone --depth 1 https://github.com/initdc/cross-make.git workdir
      - name: Prepare scripts deps
        run: |
          sudo gem install libexec

          echo USER=$(whoami)
          mkdir -p $CCACHE_DIR
          export PATH=/usr/lib/ccache:$PATH
          which gcc
          gcc -v

          ccache -F 0 -M 10GiB
          ccache -s
      # https://github.com/actions/cache/blob/main/restore/README.md
      - name: Restore linux build cache
        id: restore
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-kernel-gcc-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-kernel-gcc-
            ${{ runner.os }}-kernel-
      - name: Build release
        run: |
          cd workdir
          sudo ruby linux.rb
      - name: Check ccache
        run: |
          ccache -s
          du -hd0 $CCACHE_DIR
      # https://github.com/actions/cache/blob/main/save/README.md
      - name: Save linux build cache
        id: cache
        if: ${{ github.event_name }} == "workflow_dispatch"
        uses: actions/cache/save@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-kernel-gcc-${{ github.sha }}
      - name: Tree dirs
        run: |
          tree /home/ubuntu/workdir/target
          tree /home/ubuntu/workdir/upload
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          path: "/home/ubuntu/workdir/upload/*"
      - name: Upload to Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GHP }}
          files: "/home/ubuntu/workdir/upload/*"
